{"version":3,"sources":["assets/images/skill.svg","components/ProgressBar/ProgressBar.tsx","components/SkillProgress/SkillProgress.tsx","components/DisplayLottie/DisplayLottie.tsx"],"names":["ProgressBar","width","React","value","setValue","className","style","SkillProgress","techStack","viewSkillBars","triggerOnce","duration","experience","map","exp","i","progressStyle","progressPercentage","Stack","illustration","animated","DisplayLottie","animationData","Build","alt","src","skills","defaultOptions","loop","autoplay","fallback","options","isClickToPauseDisabled"],"mappings":"4uhGAAe,MAA0B,kC,wCCqB1BA,EAdiC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjD,EAA0BC,WAAe,MAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAF,aAAgB,WACdE,EAASH,MAIT,qBAAKI,UAAU,QAAQC,MAAO,CAAEL,MAAO,QAAvC,SACE,sBAAMK,MAAO,CAAEL,MAAM,GAAD,OAAKE,IAAWE,UAAU,gBC2BrCE,UAlCiB,WAC9B,OAAIC,IAAUC,cAEV,cAAC,IAAD,CAAQC,aAAW,EAACC,SAAU,IAA9B,SACE,sBAAKN,UAAU,mBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,iBAAd,yBACCG,IAAUI,WAAWC,KAAI,SAACC,EAAKC,GAC9B,IAAMC,EAAgB,CACpBf,MAAOa,EAAIG,oBAEb,OACE,sBAAaZ,UAAU,QAAvB,UACE,4BAAIS,EAAII,QACR,cAAC,EAAD,CAAajB,MAAOe,EAAcf,UAF1Bc,SAQhB,qBAAKV,UAAU,eAAf,SACGc,IAAaC,SACZ,cAACC,EAAA,EAAD,CAAeC,cAAeC,IAE9B,qBAAKC,IAAI,SAASC,IAAKC,WAO5B,O,gCCxCT,0CAqBeL,IAdqC,SAAC,GAAuB,IACpEM,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVP,cAJuE,EAApBA,eAOrD,OACE,cAAC,WAAD,CAAUQ,SAAU,cAAC,IAAD,IAApB,SACE,cAAC,IAAD,CAAQC,QAASJ,EAAgBK,wBAAsB","file":"static/js/7.aab515bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/skill.35a14766.svg\";","import * as React from \"react\";\n\nimport \"./ProgressBar.scss\";\n\ninterface ProgressBarProps {\n  width: string;\n}\nconst ProgressBar: React.FC<ProgressBarProps> = ({ width }) => {\n  const [value, setValue] = React.useState(\"0%\");\n\n  React.useEffect(() => {\n    setValue(width);\n  });\n\n  return (\n    <div className=\"meter\" style={{ width: \"100%\" }}>\n      <span style={{ width: `${value}` }} className=\"progress\" />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport \"./Progress.scss\";\nimport { illustration, techStack } from \"../../config/strings\";\nimport { Bounce } from \"react-awesome-reveal\";\nimport skills from \"../../assets/images/skill.svg\";\nimport Build from \"../../assets/lottie/build.json\";\nimport DisplayLottie from \"../DisplayLottie/DisplayLottie\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\n\nconst SkillProgress: React.FC = () => {\n  if (techStack.viewSkillBars) {\n    return (\n      <Bounce triggerOnce duration={1000}>\n        <div className=\"skills-container\">\n          <div className=\"skills-bar\">\n            <h1 className=\"skills-heading\">Proficiency</h1>\n            {techStack.experience.map((exp, i) => {\n              const progressStyle = {\n                width: exp.progressPercentage\n              };\n              return (\n                <div key={i} className=\"skill\">\n                  <p>{exp.Stack}</p>\n                  <ProgressBar width={progressStyle.width} />\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"skills-image\">\n            {illustration.animated ? (\n              <DisplayLottie animationData={Build} />\n            ) : (\n              <img alt=\"Skills\" src={skills} />\n            )}\n          </div>\n        </div>\n      </Bounce>\n    );\n  }\n  return null;\n};\n\nexport default SkillProgress;\n","import React, { Suspense } from \"react\";\nimport Lottie from \"react-lottie\";\nimport Loading from \"../Loading/Loading\";\n\ninterface DisplayLottieProps {\n  animationData: any;\n}\nconst DisplayLottie: React.FC<DisplayLottieProps> = ({ animationData }) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData\n  };\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <Lottie options={defaultOptions} isClickToPauseDisabled />\n    </Suspense>\n  );\n};\n\nexport default DisplayLottie;\n"],"sourceRoot":""}