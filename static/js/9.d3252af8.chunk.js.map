{"version":3,"sources":["components/EducationCard/EducationCard.tsx","components/Education/Education.tsx"],"names":["EducationCard","descBullets","school","imgRef","createRef","isDark","useContext","StyleContext","triggerOnce","direction","duration","className","crossOrigin","ref","src","logo","alt","schoolName","subHeader","desc","map","item","i","Education","educationInfo","display","id","schools","index"],"mappings":"8MA6EeA,EA5DqC,SAAC,GAAgB,IAE3CC,EAF6BC,EAAa,EAAbA,OAC/CC,EAA4CC,sBAU1CC,EAAWC,qBAAWC,KAAtBF,OACR,OACE,gCACE,cAAC,IAAD,CAAMG,aAAW,EAACC,UAAU,OAAOC,SAAU,IAA7C,SACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBACEC,YAAa,YACbC,IAAKV,EACLQ,UAAU,uBACVG,IAAKZ,EAAOa,KACZC,IAAKd,EAAOe,eAGhB,sBAAKN,UAAU,uBAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCT,EAAOe,aAE9C,sBAAKN,UAAU,yBAAf,UACE,oBACEA,UACEN,EACI,qCACA,2BAJR,SAOGH,EAAOgB,YAEV,mBACEP,UAAS,UACPN,EAAS,YAAc,GADhB,4BADX,SAKGH,EAAOQ,WAEV,mBAAGC,UAAU,sBAAb,SAAoCT,EAAOiB,OAC3C,qBAAKR,UAAU,yBAAf,SACE,8BA7CUV,EA6CUC,EAAOD,YA5ChCA,EACHA,EAAYmB,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAYX,UAAU,WAAtB,SACGU,GADMC,MAIT,qBA4CF,cAAC,IAAD,CAAOd,aAAW,EAACC,UAAU,OAAOC,SAAU,IAA9C,SACE,qBAAKC,UAAU,gC,OClDRY,UAhBa,WAC1B,OAAIC,IAAcC,QAEd,sBAAKd,UAAU,oBAAoBe,GAAG,YAAtC,UACE,oBAAIf,UAAU,oBAAd,uBACA,qBAAKA,UAAU,2BAAf,SACGa,IAAcG,QAAQP,KAAI,SAAClB,EAAQ0B,GAAT,OACzB,cAAC,EAAD,CAA2B1B,OAAQA,GAAf0B,WAMvB","file":"static/js/9.d3252af8.chunk.js","sourcesContent":["import React, { createRef, useContext } from \"react\";\nimport { Fade, Slide } from \"react-awesome-reveal\";\nimport \"./EducationCard.scss\";\nimport StyleContext from \"../../contexts/StyleContext\";\n\ninterface schoolType {\n  schoolName: string;\n  logo: string;\n  subHeader: string;\n  duration: string;\n  desc?: string;\n  descBullets: Array<string>;\n}\ninterface EducationCardProps {\n  school: schoolType;\n}\n\nconst EducationCard: React.FC<EducationCardProps> = ({ school }) => {\n  const imgRef: React.RefObject<HTMLImageElement> = createRef();\n  const getDescBullets = (descBullets: Array<string>) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n        <li key={i} className=\"subTitle\">\n          {item}\n        </li>\n      ))\n      : null;\n  };\n  const { isDark } = useContext(StyleContext);\n  return (\n    <div>\n      <Fade triggerOnce direction=\"left\" duration={1000}>\n        <div className=\"education-card\">\n          <div className=\"education-card-left\">\n            <img\n              crossOrigin={\"anonymous\"}\n              ref={imgRef}\n              className=\"education-roundedimg\"\n              src={school.logo}\n              alt={school.schoolName}\n            />\n          </div>\n          <div className=\"education-card-right\">\n            <h5 className=\"education-text-school\">{school.schoolName}</h5>\n\n            <div className=\"education-text-details\">\n              <h5\n                className={\n                  isDark\n                    ? \"dark-mode education-text-subHeader\"\n                    : \"education-text-subHeader\"\n                }\n              >\n                {school.subHeader}\n              </h5>\n              <p\n                className={`${\n                  isDark ? \"dark-mode\" : \"\"\n                } education-text-duration`}\n              >\n                {school.duration}\n              </p>\n              <p className=\"education-text-desc\">{school.desc}</p>\n              <div className=\"education-text-bullets\">\n                <ul>{getDescBullets(school.descBullets)}</ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fade>\n      <Slide triggerOnce direction=\"left\" duration={2000}>\n        <div className=\"education-card-border\"></div>\n      </Slide>\n    </div>\n  );\n};\n\nexport default EducationCard;\n","import React from \"react\";\nimport \"./Education.scss\";\nimport EducationCard from \"../EducationCard/EducationCard\";\nimport { educationInfo } from \"../../config/strings\";\n\nconst Education: React.FC = () => {\n  if (educationInfo.display) {\n    return (\n      <div className=\"education-section\" id=\"education\">\n        <h1 className=\"education-heading\">Education</h1>\n        <div className=\"education-card-container\">\n          {educationInfo.schools.map((school, index) => (\n            <EducationCard key={index} school={school} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Education;\n"],"sourceRoot":""}